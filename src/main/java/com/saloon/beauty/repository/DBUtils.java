package com.saloon.beauty.repository;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.*;

/**
 * Contains util methods for DAOs
 */
public class DBUtils {

    private static final Logger log = LogManager.getLogger(DBUtils.class);

    /**
     * Returns id from executed insert statement
     * @param insertStatement - executed statement
     * @return - autogenerated by DB id or -1 if {@code Statement}  object did
     * not generate any keys
     * @throws SQLException if a database access error occurs or
     * this method is called on a closed {@code Statement}
     */
    public static long getIdFromStatement(Statement insertStatement) throws SQLException {

        long id = -1;

        ResultSet generatedKeys = insertStatement.getGeneratedKeys();

        if (generatedKeys.next()) {
            id = generatedKeys.getLong(1);
        }

        return id;
    }

    /**
     * Gives a result of query which has only one value in its
     * executing result - count of rows in a table which satisfies
     * the query conditions
     * @param connection to DB
     * @param query counting query to DB
     * @return count of rows in a table
     */
    public static long getResultOfCountingQuery(Connection connection, String query) throws SQLException {
        PreparedStatement statement = connection.prepareStatement(query);

        ResultSet rs = statement.executeQuery();
        if (rs.next()) {
            return rs.getLong(1);
        } else {
            return 0;
        }
    }

    /**
     * Checks is a given exception thrown because of attempt to insert
     * into a table a duplicate entry. In many popular SQL servers such as
     * MySQL, PostgreSQL, and Oracle the exception it this case will return
     * SQLState = "23000"
     * @param e - exception thrown by INSERT statement execute
     * @return true if the INSERT statement query met the duplicate in the table
     */
    public static boolean isTryingToInsertDuplicate(SQLException e) {
        return "23000".equals(e.getSQLState());
    }

}
